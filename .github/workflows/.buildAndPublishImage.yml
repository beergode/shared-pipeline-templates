#name: Build And Publish Container Image
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#  workflow_call:
#    inputs:
#      repository_name:
#        required: true
#        type: string
#      image_name:
#        required: true
#        type: string
#      tag:
#        type: string
#    secrets:
#      registry_username:
#        required: true
#      registry_password:
#        required: true
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout repository
#      if: ${{ true && github.repository != 'numanturkeri/shared-pipeline-templates' }}
#      uses: actions/checkout@v3
#      with:
#        repository: ${{ inputs.repository_name }}
#        ref: main
#
#    - name: Set up JDK
#      if: ${{ true && github.repository != 'numanturkeri/shared-pipeline-templates' }}
#      uses: actions/setup-java@v3
#      with:
#        distribution: 'adopt'
#        java-version: '17'
#
#    - name: Build with Maven
#      if: ${{ true && github.repository != 'numanturkeri/shared-pipeline-templates' }}
#      run:
#        mvn clean install
#
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1
#
#    - name: Login to GitHub Container Registry
#      if: ${{ github.repository != 'numanturkeri/shared-pipeline-templates' }}
#      uses: docker/login-action@v2
#      with:
#        registry: ghcr.io
#        username: ${{ secrets.registry_username }}
#        password: ${{ secrets.registry_password }}
#
#    - name: Build and push Docker image
#      if: ${{ github.repository != 'numanturkeri/shared-pipeline-templates' }}
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        push: true
#        tags: |
#          ghcr.io/${{ inputs.image_name }}:latest
#          ghcr.io/${{ inputs.image_name }}:${{ inputs.tag }}


name: Build And Publish Container Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      tag:
        type: string
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ true && github.repository != 'numanturkeri/shared-pipeline-templates' }}
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository_name }}
          ref: main

      - name: Set up JDK
        if: ${{ true && github.repository != 'numanturkeri/shared-pipeline-templates' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        if: ${{ true && github.repository != 'numanturkeri/shared-pipeline-templates' }}
        run:
          mvn clean install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: ${{ github.repository != 'numanturkeri/shared-pipeline-templates' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Build and push Docker image
        if: ${{ github.repository != 'numanturkeri/shared-pipeline-templates' }}
        env:
          IMAGE_NAME: ${{ inputs.image_name }}
          TAG: ${{ inputs.tag }}
        run: |
          echo "::set-env name=IMAGE_NAME::${IMAGE_NAME}"
          echo "::set-env name=TAG::${TAG}"
          docker buildx build --iidfile /tmp/docker-build-push-dOrfNV/iidfile --tag ghcr.io/${IMAGE_NAME}:latest --tag ghcr.io/${IMAGE_NAME}:${TAG} --metadata-file /tmp/docker-build-push-dOrfNV/metadata-file --push .